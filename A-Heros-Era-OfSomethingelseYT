repeat
    wait()
until game:IsLoaded()

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local VirtualInputManager = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")

local npcs = Workspace.NPCS
local Player = Players.LocalPlayer
local wait = task.wait
local spawn = task.spawn

local Config = {
    WindowName = "V.G Hub",
    Color = Color3.fromRGB(107, 72, 55),
    Keybind = Enum.KeyCode.RightControl
}

repeat
    wait()
until game:IsLoaded() and Player and Player.Character and
    Workspace.Camera.CameraSubject == Player.Character:WaitForChild("Humanoid")
wait()
for i, v in pairs(getconnections(Player.Idled)) do
    v:Disable()
end
for i,v in pairs(getconnections(Player.Character.Config.ToggleRagdoll.Changed)) do
    v:Disable()
end 
Player.CharacterAdded:Connect(function()
wait(1)
for i,v in pairs(getconnections(Player.Character.Config.ToggleRagdoll.Changed)) do
    v:Disable()
end 
end)
local Name = "Era Of Alt.json"

Des = {}
if makefolder then
    makefolder("V.G Hub")
end

local Settings

if
    not pcall(
        function()
            readfile("V.G Hub//" .. Name)
        end
    )
 then
    writefile("V.G Hub//" .. Name, HttpService:JSONEncode(Des))
end

Settings = HttpService:JSONDecode(readfile("V.G Hub//" .. Name))

local function Save()
    writefile("V.G Hub//" .. Name, HttpService:JSONEncode(Settings))
end

local Sus = {}
for i, v in pairs(npcs:GetChildren()) do
    if v:IsA("Model") and not table.find(Sus, v.Name) then
        table.insert(Sus, v.Name)
    end
end

spawn(
    function()
        while wait(0) do
             pcall(
                function()
                    for i, v in pairs(Workspace:GetChildren()) do
                        if v.Name == "Quest Board" then
                            v.Parent = Workspace.Map
                        end
                    end
                end
            )
        end
    end
)

wait(1)

local Quests = {}
for i, v in pairs(Workspace.Map:GetChildren()) do
    if v.Name == "Quest Board" then
        for i, v in pairs(v.Papers:GetChildren()) do
            if v.Name == "Part" then
                table.insert(
                    Quests,
                    v:FindFirstChild("SurfaceGui"):FindFirstChild("Frame"):FindFirstChild("QuestName").Text .. " - " .. v:FindFirstChild("SurfaceGui"):FindFirstChild("Frame"):FindFirstChild("LevelReq").Text
                )
            end
        end
    end
end



local Armor = {}
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Armor:GetChildren()) do
    if not table.find(Armor,v.Name) then
        table.insert(Armor,v.Name .. " - " .. v.GUI.View.ItemCost.Text)
    end 
end 
local Items = {}
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Items:GetChildren()) do
    if not table.find(Items,v.Name) then
        table.insert(Items,v.Name .. " - " .. v.GUI.View.ItemCost.Text)
    end 
end 
local Pages = {}
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Pages:GetChildren()) do
    if not table.find(Pages,v.Name) then
        table.insert(Pages,v.Name .. " - " .. v.GUI.View.ItemCost.Text)
    end 
end 
local Weapons = {}
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Weapons:GetChildren()) do
    if not table.find(Weapons,v.Name) then
        table.insert(Weapons,v.Name .. " - " .. v.GUI.View.ItemCost.Text)
    end 
end 

local Char = Player.Character or Player.CharacterAdded:Wait()
local Swing
for i, v in pairs(getgc(true)) do
    if type(v) == "function" and getfenv(v).script == Char:WaitForChild("Client") then
        if debug.getinfo(v).name == "Swing" then
            Swing = v
        end
    end
end


if hookmetamethod then

local OldNameCall
OldNameCall = hookmetamethod(game, "__newindex", function(A, B, ...)
    if not checkcaller()  and (B == "WalkSpeed") then
        return game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").WalkSpeed or 16
    end
    if not checkcaller()  and (B == "JumpPower") then
        return game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").JumpPower or 50
    end
    return OldNameCall(A, B, ...)
end)


local Table = {Player, Char}
local Table2 = {
    "ClearAllChildren",
}
local OldNameCall = nil
OldNameCall =
    hookmetamethod(
    game,
    "__namecall",
    function(self, ...)
        local Args = {...}
        if self.Name == "LightAttack" and Args[1] == "Yes" or self.Name == "Trigger" or self.Name:match("ahdih") then
            return wait(9e9)
        end
        if  table.find(Table2,getnamecallmethod()) and table.find(Table,self) or self.Name == game.Players.LocalPlayer.Name and getnamecallmethod() == "ClearAllChildren" then
            return wait(9e9)
        end
        return OldNameCall(self, ...)
    end
)
end

Player.Character.JumpCooldown.Disabled = true

game.Players.LocalPlayer.CharacterAdded:Connect(
    function()
        if Player.Character and wait(3) then
            Player.Character.JumpCooldown.Disabled = true
        end
    end
)


local function RaduisCheck(A, B, C)
    if (A.Position - B.Position).Mag < C then
        return A, B, C
    end
end
local function Tween(A, B, C)
    if A then
        local Time = (B.p - A.Position).magnitude / C
        local Info = TweenInfo.new(Time, Enum.EasingStyle.Linear)
        local Tween = game:GetService("TweenService"):Create(A, Info, {CFrame = B})
        Tween:Play()
    end
end

local Areas = {}
for i, v in pairs(Workspace.Areas:GetChildren()) do
    if v:IsA("BasePart") and not table.find(Areas, v.Name) then
        table.insert(Areas, v.Name)
    end
end

local GetTool = function()
    local Tool 
    for i,v in pairs(Player.Character:GetChildren()) do
        if v:IsA('Tool') then 
            Tool = v 
        end 
    end 
end

local function Click()
    for i,v in pairs(Player.Character:GetChildren()) do
        if v:IsA("Tool") then
            v:Activate()
        end 
    end 
    if not Player.Character:FindFirstChildWhichIsA("Tool") and not Player.Character.Config.CAttackCooldown.Value and wait(0.3) then
        Swing()
    end 
end

local FuckDekuDimz = function()
    
    if not Player.Character.Config.CombatMode.Value and Settings.FightMethod == "Fists" then
        VirtualInputManager:SendKeyEvent(true, "R", false, game)
    end
    if not Player.Character.Config.CombatMode.Value and Settings.FightMethod == "Sword" then
        VirtualInputManager:SendKeyEvent(true, "F", false, game)
    end
    Click()
end

events = {"MouseButton1Click", "MouseButton1Down", "Activated"}
local Get = function()
local A
    for i,v in pairs(Player.PlayerGui:FindFirstChild("Quest"):GetChildren()) do
        if v:IsA("IntValue") then 
            A = v.Name 
        end 
    end 
    return A 
end 

local function getNearestMob()
    local TargetDistance = math.huge
    local Target
    for i, v in ipairs(npcs:GetChildren()) do
        if
            v.Name == (Settings.Mob) and not Settings.AutoQuest and v and v:FindFirstChild("HumanoidRootPart") and v.Head.Transparency ~= 1 and
                v.Health.Value ~= 0 or
                Settings.AutoQuest and v.Health.Value ~= 0 and v:FindFirstChild("HumanoidRootPart") and v and v.Head.Transparency ~= 1 and 
                    Player.PlayerGui:FindFirstChild("Quest") and string.match(Get(),v.Name) 
                    
         then
            local Mag =
                (v.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
            if Mag < TargetDistance then
                TargetDistance = Mag
                Target = v
            end
        end
    end
    return Target
end

local Snaps = {
    "Wind",
    "Fire",
    "Water",
    "Dark",
    "Light",
    "Healing",
    "Frost",
    "Explosion",
    "Heavenly Body",
    "Compose",
    "Gravity",
    "Sound",
    "Demon",
    "Spatial",
    "Time",
    "Anti-Magic"
}

if Settings.Speed == nil then
    Settings.Speed = 300
end
if Settings.TeleportMethod == nil then
    Settings.TeleportMethod = "Tween"
end
if Settings.Angle == nil then
    Settings.Angle = 0
end
if Settings.Height == nil then
    Settings.Height = 8
end
if Settings.FightMethod == nil then
    Settings.FightMethod = "Fists"
end

UserInputService.InputBegan:Connect(function(v)
	if v.KeyCode == Enum.KeyCode.LeftShift then
		Player.Character.Humanoid.WalkSpeed = 30
	elseif v.KeyCode == Enum.KeyCode.RightShift then
			Player.Character.Humanoid.WalkSpeed = 30
	end
end)
UserInputService.InputEnded:Connect(function(v)
	if v.KeyCode == Enum.KeyCode.LeftShift then
		Player.Character.Humanoid.WalkSpeed = 16
	elseif v.KeyCode == Enum.KeyCode.RightShift then
			Player.Character.Humanoid.WalkSpeed = 16
	end
end)
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/test"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Era Of Althea")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("")
local Section2 = Tab1:CreateSection("")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")



local Toggle1 = Section1:CreateToggle("Auto Mobs", Settings.AutoFarm, function(State)
Settings.AutoFarm = State
RunService.Stepped:Connect(
    function()
        if Settings.AutoFarm then
            pcall(function()
                if Player.Character or Player.CharacterAdded:Wait(1) then
                    Player.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(11)
                end 
            end)
        end
    end
)
spawn(
    function()
        while wait() and Settings.AutoFarm do
            pcall(
                function()
                    local v = getNearestMob()
                    if Settings.Method == "Under" then
                        if Settings.TeleportMethod == "InstantTP" then
                            Player.Character.HumanoidRootPart.CFrame =
                                v.HumanoidRootPart.CFrame * CFrame.new(0, -Settings.Height, 3) * CFrame.Angles(Settings.Angle, 0 ,0)
                        end
                        if Settings.TeleportMethod == "Tween" then
                            Tween(
                                Player.Character.HumanoidRootPart,
                                v.HumanoidRootPart.CFrame * CFrame.new(0, -Settings.Height, 3) * CFrame.Angles(Settings.Angle, 0 ,0),
                                Settings.Speed
                            )
                        end
                    end
                    if Settings.Method == "Above" then
                        if Settings.TeleportMethod == "InstantTP" then
                            Player.Character.HumanoidRootPart.CFrame =
                                v.HumanoidRootPart.CFrame * CFrame.new(0, Settings.Height, 3) * CFrame.Angles(Settings.Angle, 0 ,0)
                        end
                        if Settings.TeleportMethod == "Tween" then
                            Tween(
                                Player.Character.HumanoidRootPart,
                                v.HumanoidRootPart.CFrame * CFrame.new(0, Settings.Height, 3) * CFrame.Angles(Settings.Angle, 0 ,0),
                                Settings.Speed
                            )
                        end
                    end
                    if Settings.Method == "Behind" then
                        if Settings.TeleportMethod == "InstantTP" then
                            Player.Character.HumanoidRootPart.CFrame =
                                v.HumanoidRootPart.CFrame * CFrame.new(0, Settings.Height, 8) * CFrame.Angles(Settings.Angle, 0 ,0)
                        end
                        if Settings.TeleportMethod == "Tween" then
                            Tween(
                                Player.Character.HumanoidRootPart,
                                v.HumanoidRootPart.CFrame * CFrame.new(0, Settings.Height, 8) * CFrame.Angles(Settings.Angle, 0 ,0),
                                Settings.Speed
                            )
                        end
                    end
                    FuckDekuDimz()
                end
            )
        end
    end
)

end)



local Dropdown1 = Section1:CreateDropdown("Mobs", Sus, function(Name)
	Settings.Mob = Name
end)

local Dropdown1 = Section1:CreateDropdown("Farm Method", {"Under","Behind","Above"}, function(Name)
	Settings.Method = Name
end)

local Dropdown1 = Section1:CreateDropdown("Fight Method", {"Fists","Sword"}, function(Name)
	Settings.FightMethod = Name
end)

local Dropdown1 = Section1:CreateDropdown("Teleport Method", {"InstantTP","Tween"}, function(Name)
	Settings.TeleportMethod = Name
end)

local Slider3 = Section1:CreateSlider("Tween Speed",0,1000,Settings.Speed,false, function(Value)
	Settings.Speed = Value
end)

local Slider3 = Section1:CreateSlider("AutoFarm Distance",0,15,Settings.Height,false, function(Value)
	Settings.Height = Value
end)
local Slider3 = Section1:CreateSlider("AutoFarm Angle",0,360,Settings.Angle,false, function(Value)
	Settings.Angle = Value
end)

local Toggle1 = Section1:CreateToggle("Auto Roll Snap", nil, function(State)
    Settings.Snaps  = State
spawn(function()
while Settings.Snaps do wait(1)

if not Player.PlayerGui.MenuV2.StatFrame.Element.Text:find(Settings.Snap) then
pcall(function()
Player.PlayerGui.MenuV2.ShopFrame.SnapTab.Spin.Parent = Player.PlayerGui.MenuV2

Player.PlayerGui.MenuV2.Spin.Size = UDim2.new(9e9,9e9,9e9,9e9) wait(1)
game.VirtualUser:ClickButton1(Vector2.new(9e9,9e9)) wait()
Player.PlayerGui.MenuV2.Spin.Parent = Player.PlayerGui.MenuV2.ShopFrame.SnapTab
end)
end  end end) end)


local Dropdown1 = Section1:CreateDropdown("Snaps", Snaps, function(Name)
    Settings.Snap = Name
end)
local Toggle1 = Section1:CreateToggle("FullBright", Settings.FullBright, function(State)
Settings.FullBright = State
        if Settings.FullBright then
            game:GetService("Lighting").Ambient = Color3.new(1, 1, 1)
            game:GetService("Lighting").ColorShift_Bottom = Color3.new(1, 1, 1)
            game:GetService("Lighting").ColorShift_Top = Color3.new(1, 1, 1)
        else
            game:GetService("Lighting").Ambient = Color3.new(0, 0, 0)
            game:GetService("Lighting").ColorShift_Bottom = Color3.new(0, 0, 0)
            game:GetService("Lighting").ColorShift_Top = Color3.new(0, 0, 0)
        end
game.Lighting.Changed:connect(
    function()
        if Settings.FullBright then
            game:GetService("Lighting").Ambient = Color3.new(1, 1, 1)
            game:GetService("Lighting").ColorShift_Bottom = Color3.new(1, 1, 1)
            game:GetService("Lighting").ColorShift_Top = Color3.new(1, 1, 1)
        else
            game:GetService("Lighting").Ambient = Color3.new(0, 0, 0)
            game:GetService("Lighting").ColorShift_Bottom = Color3.new(0, 0, 0)
            game:GetService("Lighting").ColorShift_Top = Color3.new(0, 0, 0)
        end
    end
)
end)


local Toggle1 = Section1:CreateToggle("HardReset", Settings.HardReset, function(State)
Settings.HardReset = State
spawn(function()
    while wait() and Settings.HardReset do
        pcall(function()
            if Player.Character:FindFirstChildWhichIsA("Humanoid").Health <= 10 then
                Player.Character.Head:Destroy()
            end 
        end) 
    end 
end)
end)
local Toggle1 = Section1:CreateToggle("AutoQuest", Settings.AutoQuest, function(State)
Settings.AutoQuest = State

spawn(
    function()
        while wait() and Settings.AutoQuest do
            pcall(
                function()
                    for i, v in pairs(Workspace.Map:GetChildren()) do
                        if v.Name == "Quest Board" then
                            for i, v in pairs(v.Papers:GetChildren()) do
                                if v.Name == "Part" then
                                    if string.match(Settings.Quest,v:FindFirstChild("SurfaceGui"):FindFirstChild("Frame"):FindFirstChild(
                                            "QuestName"
                                        ).Text) and not Player.PlayerGui:FindFirstChild("Quest")
                                     then
                                        if Settings.TeleportMethod == "InstantTP" then
                                            Player.Character.HumanoidRootPart.CFrame = v.CFrame * CFrame.new(0,-10,0)
                                        end
                                        if Settings.TeleportMethod == "Tween" then
                                            Tween(Player.Character.HumanoidRootPart, v.CFrame * CFrame.new(0,-10,0), Settings.Speed)
                                        end
                                        fireclickdetector(v.ClickDetector, 10)
                                    end
                                end
                            end
                        end
                    end
                end
            )
        end
    end
)

end)
local Dropdown1 = Section1:CreateDropdown("Quests", Quests, function(Name)
    Settings.Quest = Name
end)

local Toggle1 = Section1:CreateToggle("KillAura unstable", nil, function(State)
Settings.KillAura = State    
spawn(function()
    while wait(1.5) do
        for i = 1, 5 do wait()
            if Settings.KillAura then
                Swing()
            end 
        end
    end
end)
end)

local Toggle1 = Section1:CreateToggle("GodMode", Settings.GodMode, function(State)
Settings.GodMode = State
RunService.Stepped:Connect(
    function()
        if Settings.GodMode then
            pcall(function()
                if Player.Character then
                    Player.Character:WaitForChild("Config"):FindFirstChild("ManaSkin"):Destroy()
                end 
            end)
        end
    end
)
end)
local Toggle1 = Section1:CreateToggle("No Trees", Settings.Tree, function(State)
Settings.Tree = State
for i,v in pairs(game:GetService("Workspace").Trees:GetDescendants()) do
    if v:IsA("BasePart") and Settings.Tree then
        v.CanCollide = false 
        v.Transparency = 1 
        elseif v:IsA("BasePart") and not Settings.Tree then
        v.CanCollide = true
        v.Transparency = 0
    end 
end 
end)


local Dropdown1 = Section1:CreateDropdown("Area Teleports", Areas, function(Name)
    if Settings.TeleportMethod == "InstantTP" then
	Player.Character.HumanoidRootPart.CFrame = Workspace.Areas[Name].CFrame
    end 
    if Settings.TeleportMethod == "Tween" then
        Tween(Player.Character.HumanoidRootPart,Workspace.Areas[Name].CFrame,Settings.Speed)
    end 
end)

local Dropdown2 = Section2:CreateDropdown("Buy Armor", Armor, function(Name)
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Armor:GetChildren()) do
    if string.find(Name,v.Name) then
        game.ReplicatedStorage.Events.PurchaseArmor:FireServer(v);
    end 
end 
end)
local Dropdown2 = Section2:CreateDropdown("Buy Item", Items, function(Name)
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Items:GetChildren()) do
     if string.find(Name,v.Name) then
        game.ReplicatedStorage.Events.PurchaseItem:FireServer(v);
    end 
end 
end)
local Dropdown2 = Section2:CreateDropdown("Buy Page", Pages, function(Name)
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Pages:GetChildren()) do
     if string.find(Name,v.Name) then
        game.ReplicatedStorage.Events.PurchasePage:FireServer(v);
    end 
end 
end)
local Dropdown2 = Section2:CreateDropdown("Buy Weapon", Weapons, function(Name)
for i, v in pairs(game.Workspace:WaitForChild("Purchases").Weapons:GetChildren()) do
    if string.find(Name,v.Name) then
        game.ReplicatedStorage.Events.PurchaseWeapon:FireServer(v);
    end 
end 
end)

local Toggle1 = Section2:CreateToggle("Enable WalkSpeed/JumpPower", Settings.Go, function(State)
Settings.Go = State
RunService.Stepped:connect(
    function()
        if Settings.Go then
            sethiddenproperty(Player.Character:WaitForChild("Humanoid"),"WalkSpeed",Settings.WalkSpeed)
            sethiddenproperty(Player.Character:WaitForChild("Humanoid"),"JumpPower",Settings.JumpPower)
            if not game:GetService("UserInputService").WindowFocusReleased then
                setfpscap(Settings.Fps)
            end
        end
    end
)

end)

local TextBox1 = Section2:CreateTextBox("Fps Cap", "Only numbers", true, function(Value)
    Settings.Fps = Value
end)

local TextBox1 = Section2:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    Settings.WalkSpeed = Value
end)
local TextBox1 = Section2:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    Settings.JumpPower = Value
end)

local Toggle1 = Section2:CreateToggle("Infinite Jump", Settings.InfiniteJump, function(State)
Settings.InfiniteJump = State
game:GetService("UserInputService").JumpRequest:connect(
    function()
        if Settings.InfiniteJump then
            game:GetService "Players".LocalPlayer.Character:FindFirstChildWhichIsA "Humanoid":ChangeState("Jumping")
        end
    end
)
end)

local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Karrot-Esp"))()

local Toggle1 = Section1:CreateToggle("Enable Esp", Settings.Esp, function(State)
    Settings.Esp = State
    ESP:Toggle(Settings.Esp)
    
end)


local Button1 = Section2:CreateButton("Press For Hentai", function()

game.StarterGui:SetCore(
    "SendNotification",
    {
        Title = "BAHAHAHAHA",
        Text = "DuMbAsS rEtArD"
    }
)


end)
local Toggle1 = Section1:CreateToggle("PLayer Esp", Settings.PlayerEsp, function(State)
    Settings.PlayerEsp = State
    ESP.Players = Settings.PlayerEsp
end)
local Toggle1 = Section1:CreateToggle("Tracers Esp", Settings.Tracers, function(State)
    Settings.Tracers = State
    ESP.Tracers = Settings.Tracers
end)
local Toggle1 = Section1:CreateToggle("Name Esp", Settings.EspNames, function(State)
    ESP.Names = Settings.EspNames
    Settings.EspNames = State
end)
local Toggle1 = Section1:CreateToggle("Boxes Esp", Settings.Boxes, function(State)
    Settings.Boxes = State
    ESP.Boxes = Settings.Boxes
end)

local BoopWrong = function()
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "Warning",
            Text = "You have Booped the protogen the wrong way in this case justice will poor down on your soul"
        }
    )
    pcall(
        function()
            Player:Destroy()
        end
    )
    game.StarterGui:SetCore(
        "SendNotification",
        {Title = "Warning", Text = "your sentence is death eternal prison. farewell old friend.."}
    )
end
local BoopCorrect = function()
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = "OwO",
            Text = "hai chu have booped me cowwectwy fur that i sha'ww nyot end ur wife and wet chu wive i wuv chu good bai"
        }
    )
end
local Button1 = Section2:CreateButton("Reset", function()
    Player.Character.Head:Destroy()
end)
local Button1 = Section2:CreateButton("Boop protogen UwU", function()
local Functions = {BoopWrong, BoopCorrect}
local Dog = Functions[math.random(1, #Functions)]
Dog()
end)
local Toggle1 = Section2:CreateToggle("Invisicam", Settings.Sorry, function(State)
Settings.Sorry = State
if Settings.Sorry then
    Player.DevCameraOcclusionMode = "Invisicam"
else
    Player.DevCameraOcclusionMode = "Zoom"
end
end)
local Toggle1 = Section2:CreateToggle("Be Wired", Settings.Weird, function(State)
Settings.Weird = State
spawn(
    function()
        while Settings.Weird do
            wait()
            pcall(
                function()
                    Player.Character["Left Leg"]:remove()
                    Player.Character["Left Arm"]:remove()
                    Player.Character["Right Arm"]:remove()
                    Player.Character["Right Leg"]:remove()
                end
            )
        end
    end
)
end)

local Toggle1 = Section2:CreateToggle("N Noclip", Settings.Sex1, function(State)
noclips = false
Settings.Sex1 = State
Player:GetMouse().KeyDown:connect(
    function(v)
        if v == "n" then
            if Settings.Sex1 then
                noclips = not noclips
                for i, v in pairs(Player.Character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            end
        end
    end
)
RunService.Stepped:connect(
    function()
        if noclips then
            for i, v in pairs(Player.Character:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end
    end
)

end)

local Toggle1 = Section2:CreateToggle("G Noclip", Settings.Sex, function(State)
Settings.Sex = State
noclip = false
RunService.Stepped:connect(
    function()
        if noclip then
            Player.Character.Humanoid:ChangeState(11)
        end
    end
)
mouse = Player:GetMouse()
Player:GetMouse().KeyDown:connect(
    function(v)
        if v == "g" then
            if Settings.Sex then
                noclip = not noclip
                Player.Character.Humanoid:ChangeState(11)
            end
        end
    end
)
end)
local Toggle1 = Section2:CreateToggle("H Fly", Settings.Sex2, function(State)
Settings.Sex2 = State
local Max = 0
local Players = Players
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(
    function(k)
        if k:lower() == "h" then
            Max = Max + 1
            getgenv().Fly = false
            if Settings.Sex2 then
                local T = LP.Character.Torso
                local S = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local S2 = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local SPEED = 5
                local function FLY()
                    getgenv().Fly = true
                    local BodyGyro = Instance.new("BodyGyro", T)
                    local BodyVelocity = Instance.new("BodyVelocity", T)
                    BodyGyro.P = 9e4
                    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    BodyGyro.cframe = T.CFrame
                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                    BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
                    spawn(
                        function()
                            repeat
                                wait()
                                LP.Character.Humanoid.PlatformStand = false
                                if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
                                    SPEED = 200
                                elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
                                    SPEED = 0
                                end
                                if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
                                    BodyVelocity.velocity =
                                        ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) +
                                        ((Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) -
                                            Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                    S2 = {
                                        F = S.F,
                                        B = S.B,
                                        L = S.L,
                                        R = S.R
                                    }
                                elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
                                    BodyVelocity.velocity =
                                        ((Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) +
                                        ((Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) -
                                            Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                else
                                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                                end
                                BodyGyro.cframe = Workspace.CurrentCamera.CoordinateFrame
                            until not getgenv().Fly
                            S = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            S2 = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            SPEED = 0
                            BodyGyro:destroy()
                            BodyVelocity:destroy()
                            LP.Character.Humanoid.PlatformStand = false
                        end
                    )
                end
                Mouse.KeyDown:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 1
                        elseif k:lower() == "s" then
                            S.B = -1
                        elseif k:lower() == "a" then
                            S.L = -1
                        elseif k:lower() == "d" then
                            S.R = 1
                        end
                    end
                )
                Mouse.KeyUp:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 0
                        elseif k:lower() == "s" then
                            S.B = 0
                        elseif k:lower() == "a" then
                            S.L = 0
                        elseif k:lower() == "d" then
                            S.R = 0
                        end
                    end
                )
                FLY()
                if Max == 2 then
                    getgenv().Fly = false
                    Max = 0
                end
            end
        end
    end
)
end)
local Button1 = Section2:CreateButton("Anti Lag", function()
for _, v in pairs(Workspace:GetDescendants()) do
    if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
        v.Material = Enum.Material.SmoothPlastic
        if v:IsA("Texture") then
            v:Destroy()
        end
    end
end
end)

local Button1 = Section2:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = Players:GetPlayers()[math.random(1, #Players:GetPlayers())]

Player.Character.HumanoidRootPart.CFrame =
    CFrame.new(
    Vector3.new(
        randomPlayer.Character.Head.Position.X,
        randomPlayer.Character.Head.Position.Y,
        randomPlayer.Character.Head.Position.Z
    )
)
end)
local Button1 = Section2:CreateButton("Lag Switch F3", function()
local ass = false
local bitch = settings()

game:service "UserInputService".InputEnded:connect(
    function(i)
        if i.KeyCode == Enum.KeyCode.F3 then
            ass = not ass
            bitch.Network.IncomingReplicationLag = ass and 10 or 0
        end
    end
)
 end) 
local Button1 = Section2:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    TeleportService:TeleportToPlaceInstance(PlaceID, ID, Player)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Button1 = Section2:CreateButton("Rejoin", function()
TeleportService:Teleport(game.PlaceId, Player) end)





local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("Credits The3Bakers")
Section3:CreateLabel("Credits E621")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)


-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image", {"Default","Hearts","Abstract","Hexagon","Circles","Lace With Flowers","Floral"}, function(Name)
	if Name == "Default" then
		Window:SetBackground("2151741365")
	elseif Name == "Hearts" then
		Window:SetBackground("6073763717")
	elseif Name == "Abstract" then
		Window:SetBackground("6073743871")
	elseif Name == "Hexagon" then
		Window:SetBackground("6073628839")
	elseif Name == "Circles" then
		Window:SetBackground("6071579801")
	elseif Name == "Lace With Flowers" then
		Window:SetBackground("6071575925")
	elseif Name == "Floral" then
		Window:SetBackground("5553946656")
	end
end)
Dropdown3:SetOption("Default")

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)


spawn(
    function()
        while wait() do
            pcall(
                function()
                    Save()
                end
            )
        end
    end
)

