local Config = {
    WindowName = "V.G Hub",
	Color = Color3.fromRGB(255,128,64),
	Keybind = Enum.KeyCode.RightControl
}
repeat wait() until game:IsLoaded() wait() 
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
game.CoreGui.RobloxPromptGui.promptOverlay.DescendantAdded:Connect(
    function()
        if game.CoreGui.RobloxPromptGui.promptOverlay:FindFirstChild("ErrorPrompt") then
            wait()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
        end
    end
)

local Name = "DemonSlayerBurningAshes.txt"

Des = {}
if makefolder then
    makefolder("V.G Hub")
end

local Settings

if
    not pcall(
        function()
            readfile("V.G Hub//" .. Name)
        end
    )
 then
    writefile("V.G Hub//" .. Name, game:service "HttpService":JSONEncode(Des))
end

Settings = game:service "HttpService":JSONDecode(readfile("V.G Hub//" .. Name))

local function Save()
    writefile("V.G Hub//" .. Name, game:service "HttpService":JSONEncode(Settings))
end

local OldNameCall = nil
OldNameCall =
    hookmetamethod(
    game,
    "__namecall",
    function(self, ...)
        local Args = {...}
        if self.Name == "check" or self.Name == "checknumber" or self.Name == "maxstat" or self.Name == "checkstats" then
            return nil
        end
        if getnamecallmethod() == "BreakJoints" then
            return true
        end
        if getnamecallmethod() == "Destroy" and self == game.Players.LocalPlayer then 
            return nil
        end 
        return OldNameCall(self, unpack(Args))
    end
)
pcall(
    function()
        Que = {}
        for i, v in pairs(game:GetService("Workspace").chatnpcs:GetDescendants()) do
            if v:IsA("StringValue") and v.Name == "Quest" and v.Value ~= "Find Box" and v.Value ~= "Slaughter 5 players" then
                table.insert(Que, v.Value)
            end
        end
    end
)
spawn(
    function()
        game:GetService("RunService").Stepped:connect(
            function()
                workspace.FallenPartsDestroyHeight = 0 / 0
                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 1000)
            end
        )
    end
)

-- Instances:

local ChadStats = Instance.new("ScreenGui")
local Breathing = Instance.new("TextLabel")
local Hunger = Instance.new("TextLabel")
local Health = Instance.new("TextLabel")
local Rep = Instance.new("TextLabel")

--Properties:

ChadStats.Name = "Chad Stats"
ChadStats.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

if syn and syn.protect_gui then
    syn.protect_gui(ChadStats)
    ChadStats.Parent = game.CoreGui
elseif gethui then
    ChadStats.Parent = gethui()
else
    ChadStats.Parent = game.CoreGui
end

Breathing.Name = "Breathing"
Breathing.Parent = ChadStats
Breathing.Active = true
Breathing.BackgroundColor3 = Color3.fromRGB(0, 19, 0)
Breathing.BackgroundTransparency = 0
Breathing.Position = UDim2.new(0.823636413, 0, 0, 0)
Breathing.Size = UDim2.new(0, 200, 0, 50)
Breathing.Font = Enum.Font.SourceSans
Breathing.TextColor3 = Color3.fromRGB(255, 0.0)
Breathing.TextSize = 16

Hunger.Name = "Hunger"
Hunger.Parent = ChadStats
Hunger.Active = true
Hunger.BackgroundColor3 = Color3.fromRGB(0, 19, 0)
Hunger.BackgroundTransparency = 0
Hunger.Position = UDim2.new(0.823636413, 0, 0.199999988, 0)
Hunger.Size = UDim2.new(0, 200, 0, 50)
Hunger.Font = Enum.Font.SourceSans
Hunger.TextColor3 = Color3.fromRGB(255, 0.0)
Hunger.TextSize = 16

Health.Name = "Health"
Health.Parent = ChadStats
Health.Active = true
Health.BackgroundColor3 = Color3.fromRGB(0, 19, 0)
Health.BackgroundTransparency = 0
Health.Position = UDim2.new(0.823030353, 0, 0.130061358, 0)
Health.Size = UDim2.new(0, 200, 0, 50)
Health.Font = Enum.Font.SourceSans
Health.TextColor3 = Color3.fromRGB(255, 0.0)
Health.TextSize = 16

Rep.Name = "Rep"
Rep.Parent = ChadStats
Rep.Active = true
Rep.BackgroundColor3 = Color3.fromRGB(0, 19, 0)
Rep.BackgroundTransparency = 0
Rep.Position = UDim2.new(0.823286057, 0, 0.0613496974, 0)
Rep.Size = UDim2.new(0, 200, 0, 50)
Rep.Font = Enum.Font.SourceSans
Rep.TextColor3 = Color3.fromRGB(255, 0.0)
Rep.TextSize = 16

local script = Instance.new("LocalScript", Breathing)
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Visible then
            Breathing.Text =
                "Breath " ..
                math.floor(game:GetService("Players").LocalPlayer:WaitForChild("NoSaveValue"):WaitForChild("Air").Value) ..
                    "%"
            Breathing.Visible = true
        else
            Breathing.Visible = false
        end
    end
)
local script = Instance.new("LocalScript", Hunger)
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Visible then
            Hunger.Text =
                "Hunger " ..
                math.floor(
                    game:GetService("Players").LocalPlayer:WaitForChild("CharStats"):WaitForChild("Hunger").Value
                ) ..
                    "%"
            Hunger.Visible = true
        else
            Hunger.Visible = false
        end
    end
)
local script = Instance.new("LocalScript", Health)
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Visible then
            Health.Text =
                "Health " ..
                math.floor(game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid").Health) .. "%"
            Health.Visible = true
        else
            Health.Visible = false
        end
    end
)

local script = Instance.new("LocalScript", Rep)
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Visible then
            Rep.Text = "Rep " .. game:GetService("Players").LocalPlayer:WaitForChild("Data"):WaitForChild("Rep").Value
            Rep.Visible = true
        else
            Rep.Visible = false
        end
    end
)

Areas = {}
for i, v in pairs(game:GetService("ReplicatedStorage").Areas:GetChildren()) do
    if v:IsA("BasePart") then
        table.insert(Areas, v.Name)
    end
end

Mobs = {"Demon", "Strong Demon", "Fast Demon", "Demon Slayer", "Strong Demon Slayer"}
if not game.workspace:FindFirstChild("Mobs") then
Folder = Instance.new("Folder",workspace)
Folder.Name = "Mobs"
end 


local function getNearestMob()
    local TargetDistance = math.huge
    local Target
    for i, v in ipairs(game:GetService("Workspace").npc:GetChildren()) do
        for i, v in ipairs(v:GetChildren()) do
            for i, v in ipairs(v:GetChildren()) do
                if v:IsA("Folder") then
                    for i, v in ipairs(v:GetChildren()) do
                        if  
                            v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and
                                v:FindFirstChildOfClass("Humanoid").Health ~= 0 and
                                v.Name == Settings.Mobs
                         then
                            local Mag =
                                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position -
                                v:FindFirstChild("HumanoidRootPart").Position).Magnitude
                            if Mag < TargetDistance then
                                TargetDistance = Mag
                                Target = v
                            end
                        end
                    end
                end
            end
        end
    end
    return Target
end



local function getNearestiii()
    local TargetDistance = math.huge
    local Target
    for i, v in ipairs(game:GetService("Workspace").npc:GetChildren()) do
        for i, v in ipairs(v:GetChildren()) do
            for i, v in ipairs(v:GetChildren()) do
                if v:IsA("Folder") then
                    for i, v in ipairs(v:GetChildren()) do
                        if
                            v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and
                                v:FindFirstChildOfClass("Humanoid").Health ~= 0 and
                                v.Name == Settings.Mobs
                         then
                            local Mag =
                                (Vector3.new(math.random(-673,-450), -288, math.random(-648,-450)) - v:FindFirstChild("HumanoidRootPart").Position).Magnitude
                            if Mag < TargetDistance then
                                TargetDistance = Mag
                                Target = v
                            end
                        end
                    end
                end
            end
        end
    end
    return Target
end


pcall(
    function()
        Que = {}
        for i, v in pairs(game:GetService("Workspace").chatnpcs:GetDescendants()) do
            if
                v:IsA("StringValue") and v.Name == "Quest" and v.Value ~= "Find Box" and
                    v.Value ~= "Slaughter 5 players" and
                    not table.find(Que, v.Value)
             then
                table.insert(Que, v.Value)
            end
        end
    end
)
local function CheckMate()
    if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Katana") then
        wait(1)
        game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):EquipTool(
            game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Katana")
        )
    end
    if not game:GetService("Players").LocalPlayer.states:FindFirstChild("exeing") then
        game:GetService("VirtualInputManager"):SendKeyEvent(true, "B", false, game)
    end
    if not game:GetService("Players").LocalPlayer.states:FindFirstChild("selfstun") then
        game:GetService("VirtualInputManager"):SendKeyEvent(true, "R", false, game)
    end
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/test"))()
local Window = Library:CreateWindow(Config, game:GetService("CoreGui"))

local Tab1 = Window:CreateTab("Demon Slayer-Burning Ashes")
local Tab2 = Window:CreateTab("UI Settings")

local Section1 = Tab1:CreateSection("")
local Section2 = Tab1:CreateSection("")
local Section3 = Tab2:CreateSection("Menu")
local Section4 = Tab2:CreateSection("Background")


local Toggle1 = Section1:CreateToggle("Auto Attack", Settings.Attack, function(State)
Settings.Attack = State
spawn(
    function()
        while Settings.Attack do
            wait()
            game:GetService("ReplicatedStorage").events.remote:FireServer("NormalAttack")
        end
    end
)

end)


local Toggle1 = Section1:CreateToggle("Stats", Settings.Visible, function(State)
Settings.Visible = State
end)

local Toggle1 = Section1:CreateToggle("AutoFarm Mobs", Settings.AutoFarmMobs, function(State)
Settings.AutoFarmMobs = State

game:GetService("RunService").Stepped:connect(
    function()
        if Settings.AutoFarmMobs then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(
    function()
        while wait() and Settings.AutoFarmMobs do
            pcall(
                function()
                    repeat
                        wait()
                        if Settings.AutoFarmMobs == false then
                            break
                        end
                        if not game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("ForceField") then
                            game:GetService("VirtualUser"):ClickButton1(Vector2.new(0, 300))
                            game:GetService("ReplicatedStorage").events.remote:FireServer("NormalAttack")
                            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                getNearestMob().HumanoidRootPart.CFrame * CFrame.new(0, -7, 0) * CFrame.Angles(90, 0, 0)
                            CheckMate()
                            if getNearestMob().Humanoid.Health < 3 then
                                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                    getNearestMob().HumanoidRootPart.CFrame * CFrame.new(0, 0, 0) *
                                    CFrame.Angles(0, 0, 0)
                            end
                        end
                    until Settings.AutoFarmMobs == false or getNearestMob().Humanoid.Health == 0
                    if getNearestMob().Humanoid.Health == 0 then
                        getNearestMob():remove()
                    end
                end
            )
        end
    end
)

end)

if isnetworkowner then
local Toggle1 = Section1:CreateToggle("AutoFarm Mobs Safely", Settings.AutoFarmSafely, function(State)
Settings.AutoFarmSafely = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.AutoFarmSafely then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(function()
while wait(5) and Settings.AutoFarmSafely do
game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame= CFrame.new(math.random(-673,-450), -288, math.random(-648,-450))

end end)

spawn(
    function()
        while wait() and Settings.AutoFarmSafely do
            pcall(
                function()
                    repeat
                        wait()
                        if not game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("ForceField") then
                            if isnetworkowner(getNearestiii().PrimaryPart) then wait(0.1)
                                getNearestiii().PrimaryPart.CFrame = CFrame.new(math.random(-673,-450), -288, math.random(-648,-450))

                                game:GetService("VirtualUser"):ClickButton1(Vector2.new(0, 300))
                                game:GetService("ReplicatedStorage").events.remote:FireServer("NormalAttack")
                            end
                            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                getNearestiii().PrimaryPart.CFrame * CFrame.new(0, -7, 0) * CFrame.Angles(90, 0, 0)
                            CheckMate()
                            if getNearestiii().Humanoid.Health < 5 then
                                game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame =
                                    getNearestiii().PrimaryPart.CFrame * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0)
                            end
                        end
                    until getNearestiii().Humanoid.Health == 0 or Settings.AutoFarmSafely == false
                end
            )
        end
    end
)
end)
end


local Dropdown1 = Section1:CreateDropdown("Mobs", Mobs, function(String)
	Settings.Mobs = String
end)



local Toggle1 = Section1:CreateToggle("Auto Accept Quest", Settings.AutoQuest, function(State)
Settings.AutoQuest = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.AutoQuest then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(
    function()
        while Settings.AutoQuest do
            pcall(
                function()
                    wait()
                    repeat
                        wait()
                        if
                            not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("dialogGUI") and
                                not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Quest")
                         then
                            for i, v in pairs(game:GetService("Workspace").chatnpcs:GetDescendants()) do
                                if
                                    v:IsA("StringValue") and v.Name == "Quest" and v.Value ~= "Find Box" and
                                        v.Value ~= "Slaughter 5 players" and
                                        v.Value == Settings.Quest
                                 then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                        v.Parent.Parent.Parent.Parent.HumanoidRootPart.CFrame * CFrame.new(0, -26, 0)
                                    if v.Parent.Parent.Parent.Parent:FindFirstChild("JumpHitbox") then
                                        fireclickdetector(v.Parent.Parent.Parent.Parent.JumpHitbox.ClickDetector)
                                    end
                                    if v.Parent.Parent.Parent.Parent:FindFirstChild("Part") then
                                        fireclickdetector(v.Parent.Parent.Parent.Parent.Part.ClickDetector)
                                    end
                                end
                            end
                        end
                        if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("dialogGUI") then
                            game:GetService("VirtualUser"):ClickButton1(Vector2.new())
                            for i, v in pairs(
                                game:GetService("Players").LocalPlayer.PlayerGui.dialogGUI.f.sf:GetChildren()
                            ) do
                                if v:IsA("UIGridLayout") then
                                    v.CellSize = UDim2.new(500, 500, -500, -500)
                                end
                                if v.Name == "button" then
                                    v:remove()
                                end
                            end
                        end
                    until Settings.AutoQuest == false or
                        game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Quest")
                end
            )
        end
    end
)
end)


local Dropdown1 = Section1:CreateDropdown("Quests", Que, function(String)
	Settings.Quest = String
end)


local Toggle1 = Section1:CreateToggle("Auto Buy Food", Settings.Food, function(State)
Settings.Food = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Food then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
spawn(function()
while wait() and Settings.Food do
    pcall(
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game:GetService("Workspace").Store.Onigiri.CFrame * CFrame.new(0, -26, 0)
            fireclickdetector(game:GetService("Workspace").Store.Onigiri.ClickDetector)
            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("dialogGUI") then
                game:GetService("VirtualUser"):ClickButton1(Vector2.new())
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.dialogGUI.f.sf:GetChildren()) do
                    if v:IsA("UIGridLayout") then
                        v.CellSize = UDim2.new(500, 500, -500, -500)
                    end
                    if v.Name == "button" then
                        v:remove()
                    end
                end
            end
        end
    )
end
end)
end)


local Toggle1 = Section1:CreateToggle("Auto Tp To Flute/EarRing", Settings.AutoTeleport, function(State)
Settings.AutoTeleport = State

spawn(
    function()
        while Settings.AutoTeleport do
            wait(2)
            for i, v in pairs(game:GetService("Workspace").map.Stuff:GetChildren()) do
                if v:IsA("Model") then
                    for i, v in pairs(v:GetChildren()) do
                        if v:IsA("BasePart") and v:FindFirstChildOfClass("ClickDetector") then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
                            fireclickdetector(v:FindFirstChildOfClass("ClickDetector"))
                        end
                    end
                end
            end
        end
    end
)
end)


local Toggle1 = Section1:CreateToggle("Money Farm | Fast", Settings.Money, function(State)
Settings.Money = State

game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Money then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(11)
        end
    end
)
repeat
    wait()
    if Settings.Money then
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
        game:GetService("ReplicatedStorage").Areas["Yokai Village"].CFrame
        end
until game:GetService("Workspace").chatnpcs.Quest.Box:FindFirstChild("Main") or Settings.Money == false
spawn(
    function()
        while wait() and Settings.Money do
            pcall(
                function()
                    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("dialogGUI") then
                        game:GetService("VirtualUser"):ClickButton1(Vector2.new())
                        for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.dialogGUI.f.sf:GetChildren()) do
                            if v:IsA("UIGridLayout") then
                                v.CellSize = UDim2.new(500, 500, -500, -500)
                            end
                            if v.Name == "button" then
                                v:remove()
                            end
                        end
                    end
                    for i, v in pairs(game:GetService("Workspace").chatnpcs.Quest:GetChildren()) do
                        if v:IsA("Model") and v:FindFirstChild("Amazon Box") then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                v.PrimaryPart.CFrame * CFrame.new(0, -26, 0)
                            fireclickdetector(v.hitbox:FindFirstChildOfClass("ClickDetector"))
                        elseif
                            game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Quest") and v:IsA("Model") and
                                v:FindFirstChild("Main")
                         then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                v.PrimaryPart.CFrame * CFrame.new(0, -26, 0)
                            fireclickdetector(v.pp:FindFirstChildOfClass("ClickDetector"))
                        end
                    end
                end
            )
        end
    end
)

end)

local Toggle1 = Section1:CreateToggle("Mob Anchored Aura", Settings.MobAch, function(State)
Settings.MobAch = State
spawn(
    function()
        while Settings.MobAch do
            wait(3)
            for i, v in ipairs(game:GetService("Workspace"):GetDescendants()) do
                if v:FindFirstChild("HumanoidRootPart") and table.find(Mobs,v.Name) and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude < 25 then
                    if isnetworkowner(v.HumanoidRootPart) then
                        v.HumanoidRootPart.Anchored = true
                    end
                end
            end
        end
    end
)

end)


local Toggle1 = Section1:CreateToggle("Mob Stun Aura", Settings.MobStu, function(State)
Settings.MobStu = State
spawn(
    function()
        while Settings.MobStu do
            wait(3)
            for i, v in ipairs(game:GetService("Workspace").npc:GetDescendants()) do
                if v:FindFirstChild("HumanoidRootPart") and table.find(Mobs,v.Name) and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude < 25 then wait()
                    if isnetworkowner(v.HumanoidRootPart) then
                        v.Humanoid.PlatformStand = true
                    end
                end
            end
        end
    end
)

end)

local Toggle1 = Section1:CreateToggle("Mob Jump Aura", Settings.MobJum, function(State)
Settings.MobJum = State
spawn(function()
while Settings.MobJum do
    wait()
    for i, v in ipairs(game:GetService("Workspace"):GetDescendants()) do
        if v:FindFirstChild("HumanoidRootPart") and table.find(Mobs,v.Name) and (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude < 25 then
            if isnetworkowner(v.HumanoidRootPart) then
                v.Humanoid.Jump = true
            end
        end
    end
end
end)
end)

local Toggle1 = Section1:CreateToggle("Infinite Breath", Settings.InfiniteBreath, function(State)
Settings.InfiniteBreath = State
spawn(
    function()
        while Settings.InfiniteBreath do
            wait()
            game:GetService("ReplicatedStorage").events.remote:FireServer("manacharges")
            wait(3)
            game:GetService("ReplicatedStorage").events.remote:FireServer("manacharged")
        end
    end
)
end)

local Toggle1 = Section2:CreateToggle("Enable WalkSpeed/JumpPower", Settings.Go, function(State)
Settings.Go = State
game:GetService("RunService").Stepped:connect(
    function()
        if Settings.Go then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = Settings.WalkSpeed
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").JumpPower = Settings.JumpPower
            if not game:GetService("UserInputService").WindowFocusReleased then
                setfpscap(Settings.Fps)
            end
        end
    end
)

end)

local TextBox1 = Section2:CreateTextBox("Fps Cap", "Only numbers", true, function(Value)
    Settings.Fps = Value
end)

local TextBox1 = Section2:CreateTextBox("WalkSpeed", "Only numbers", true, function(Value)
    Settings.WalkSpeed = Value
end)
local TextBox1 = Section2:CreateTextBox("JumpPower", "Only numbers", true, function(Value)
    Settings.JumpPower = Value
end)

local TextBox1 = Section2:CreateTextBox("Yen Amount", "Only numbers", true, function(Value)
    Settings.YenAmount = Value
end)
local Toggle1 = Section2:CreateToggle("Drop Yen", Settings.DropYen, function(State)
Settings.DropYen = State
spawn(
    function()
        while Settings.DropYen do
            wait()
            game:GetService("ReplicatedStorage").events.remote:FireServer("Drop Yen", tonumber(Settings.YenAmount))
        end
    end
)
end)
local Button1 = Section2:CreateButton("Teleport To Area", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("ReplicatedStorage").Areas[Areas].CFrame
end)

local Dropdown1 = Section2:CreateDropdown("Areas", Areas, function(String)
	Areas = String
end)





local Toggle1 = Section2:CreateToggle("Infinite Jump", Settings.InfiniteJump, function(State)
Settings.InfiniteJump = State
game:GetService("UserInputService").JumpRequest:connect(
    function()
        if Settings.InfiniteJump then
            game:GetService "Players".LocalPlayer.Character:FindFirstChildOfClass "Humanoid":ChangeState("Jumping")
        end
    end
)
end)

local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Karrot-Esp"))()
ESP:AddObjectListener(game:GetService("Workspace").npc, {
    Color =  Color3.new(255,0,0),
    Type = "Model",
    PrimaryPart = function(v)
        local H = v:FindFirstChild("HumanoidRootPart")
        while not H do
            wait()
            H = v:FindFirstChild("HumanoidRootPart")
        end
        return H
    end,
    Validator = function(v)
        return not game.Players:GetPlayerFromCharacter(v)
    end,
    CustomName = function(v)
        return  v.Name
    end,
    IsEnabled = "NPC",
})






local Toggle1 = Section1:CreateToggle("Enable Esp", Settings.Esp, function(State)
    Settings.Esp = State
    ESP:Toggle(Settings.Esp)
    
end)local Toggle1 = Section1:CreateToggle("Flute/EarRing Esp", Settings.FluteEsp, function(State)
    Settings.FluteEsp = State
local function esp(v)
    local T = Drawing.new("Text")
    T.Visible = false
    T.Center = true
    T.Outline = true
    T.Font = 2
    T.Text = "item"
    T.Size = 14
    T.Color = Color3.fromRGB(203, 214, 73)
    local function update()
        local Re
        Re =
            game:GetService('RunService').Stepped:Connect(
            function() pcall(function()
                if v  then
                    local Vector, Screen = workspace.CurrentCamera:WorldToViewportPoint(v.Position)
                    if Settings.FluteEsp and Screen then
                        T.Position = Vector2.new(Vector.X, Vector.Y)
                        T.Visible = true
                        T.Text = "Flute/Earring"
                    else
                        T.Visible = false
                    end
                elseif v == nil then
                    T:Remove()
                    Re:disconnect()
                end end)
            end
        )
    end
    update()
end
for i,v in pairs(game:GetService("Workspace").map.Stuff:GetDescendants()) do
    if v:FindFirstChildOfClass("ClickDetector") then
        esp(v)
    end
end
game:GetService("Workspace").map.Stuff.DescendantAdded:Connect(
    function(v)
        if v:FindFirstChildOfClass("ClickDetector")then
            esp(v)
        end
    end
)
end)
local Toggle1 = Section1:CreateToggle("Mob Esp", Settings.NPC, function(State)
    Settings.NPC = State
    ESP.NPC = Settings.NPC
end)
local Toggle1 = Section1:CreateToggle("PLayer Esp", Settings.PlayerEsp, function(State)
    Settings.PlayerEsp = State
    ESP.Players = Settings.PlayerEsp
end)
local Toggle1 = Section1:CreateToggle("Tracers Esp", Settings.Tracers, function(State)
    Settings.Tracers = State
    ESP.Tracers = Settings.Tracers
end)
local Toggle1 = Section1:CreateToggle("Name Esp", Settings.EspNames, function(State)
    ESP.Names = Settings.EspNames
    Settings.EspNames = State
end)
local Toggle1 = Section1:CreateToggle("Boxes Esp", Settings.Boxes, function(State)
    Settings.Boxes = State
    ESP.Boxes = Settings.Boxes
end)

local Toggle1 = Section2:CreateToggle("Invisicam", Settings.Sorry, function(State)
Settings.Sorry = State
if Settings.Sorry then
    game:GetService("Players").LocalPlayer.DevCameraOcclusionMode = "Invisicam"
else
    game:GetService("Players").LocalPlayer.DevCameraOcclusionMode = "Zoom"
end
end)
local Toggle1 = Section2:CreateToggle("Be Wired", Settings.Weird, function(State)
Settings.Weird = State
spawn(
    function()
        while Settings.Weird do
            wait()
            pcall(
                function()
                    game.Players.LocalPlayer.Character["Left Leg"]:remove()
                    game.Players.LocalPlayer.Character["Left Arm"]:remove()
                    game.Players.LocalPlayer.Character["Right Arm"]:remove()
                    game.Players.LocalPlayer.Character["Right Leg"]:remove()
                end
            )
        end
    end
)
end)

local Toggle1 = Section2:CreateToggle("N Noclip", Settings.Sex1, function(State)
noclips = false
Settings.Sex1 = State
game.Players.LocalPlayer:GetMouse().KeyDown:connect(
    function(v)
        if v == "n" then
            if Settings.Sex1 then
                noclips = not noclips
                for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            end
        end
    end
)
game:GetService("RunService").Stepped:connect(
    function()
        if noclips then
            for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end
    end
)

end)

local Toggle1 = Section2:CreateToggle("G Noclip", Settings.Sex, function(State)
Settings.Sex = State
noclip = false
game:GetService("RunService").Stepped:connect(
    function()
        if noclip then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end
)
mouse = game.Players.LocalPlayer:GetMouse()
game.Players.LocalPlayer:GetMouse().KeyDown:connect(
    function(v)
        if v == "g" then
            if Settings.Sex then
                noclip = not noclip
                game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
            end
        end
    end
)
end)
local Toggle1 = Section2:CreateToggle("H Fly", Settings.Sex2, function(State)
Settings.Sex2 = State
local Max = 0
local Players = game.Players
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()
Mouse.KeyDown:connect(
    function(k)
        if k:lower() == "h" then
            Max = Max + 1
            getgenv().Fly = false
            if Settings.Sex2 then
                local T = LP.Character.Torso
                local S = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local S2 = {
                    F = 0,
                    B = 0,
                    L = 0,
                    R = 0
                }
                local SPEED = 5
                local function FLY()
                    getgenv().Fly = true
                    local BodyGyro = Instance.new("BodyGyro", T)
                    local BodyVelocity = Instance.new("BodyVelocity", T)
                    BodyGyro.P = 9e4
                    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    BodyGyro.cframe = T.CFrame
                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                    BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
                    spawn(
                        function()
                            repeat
                                wait()
                                LP.Character.Humanoid.PlatformStand = false
                                if S.L + S.R ~= 0 or S.F + S.B ~= 0 then
                                    SPEED = 200
                                elseif not (S.L + S.R ~= 0 or S.F + S.B ~= 0) and SPEED ~= 0 then
                                    SPEED = 0
                                end
                                if (S.L + S.R) ~= 0 or (S.F + S.B) ~= 0 then
                                    BodyVelocity.velocity =
                                        ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S.F + S.B)) +
                                        ((game.Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S.L + S.R, (S.F + S.B) * 0.2, 0).p) -
                                            game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                    S2 = {
                                        F = S.F,
                                        B = S.B,
                                        L = S.L,
                                        R = S.R
                                    }
                                elseif (S.L + S.R) == 0 and (S.F + S.B) == 0 and SPEED ~= 0 then
                                    BodyVelocity.velocity =
                                        ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (S2.F + S2.B)) +
                                        ((game.Workspace.CurrentCamera.CoordinateFrame *
                                            CFrame.new(S2.L + S2.R, (S2.F + S2.B) * 0.2, 0).p) -
                                            game.Workspace.CurrentCamera.CoordinateFrame.p)) *
                                        SPEED
                                else
                                    BodyVelocity.velocity = Vector3.new(0, 0.1, 0)
                                end
                                BodyGyro.cframe = game.Workspace.CurrentCamera.CoordinateFrame
                            until not getgenv().Fly
                            S = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            S2 = {
                                F = 0,
                                B = 0,
                                L = 0,
                                R = 0
                            }
                            SPEED = 0
                            BodyGyro:destroy()
                            BodyVelocity:destroy()
                            LP.Character.Humanoid.PlatformStand = false
                        end
                    )
                end
                Mouse.KeyDown:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 1
                        elseif k:lower() == "s" then
                            S.B = -1
                        elseif k:lower() == "a" then
                            S.L = -1
                        elseif k:lower() == "d" then
                            S.R = 1
                        end
                    end
                )
                Mouse.KeyUp:connect(
                    function(k)
                        if k:lower() == "w" then
                            S.F = 0
                        elseif k:lower() == "s" then
                            S.B = 0
                        elseif k:lower() == "a" then
                            S.L = 0
                        elseif k:lower() == "d" then
                            S.R = 0
                        end
                    end
                )
                FLY()
                if Max == 2 then
                    getgenv().Fly = false
                    Max = 0
                end
            end
        end
    end
)
end)
local Button1 = Section2:CreateButton("Anti Lag", function()
for _, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
        v.Material = Enum.Material.SmoothPlastic
        if v:IsA("Texture") then
            v:Destroy()
        end
    end
end
end)

local Button1 = Section2:CreateButton("Teleport to RandomPlayer", function()
local randomPlayer = game.Players:GetPlayers()[math.random(1, #game.Players:GetPlayers())]

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
    CFrame.new(
    Vector3.new(
        randomPlayer.Character.Head.Position.X,
        randomPlayer.Character.Head.Position.Y,
        randomPlayer.Character.Head.Position.Z
    )
)
end)
local Button1 = Section2:CreateButton("Lag Switch F3", function()
local ass = false
local bitch = settings()

game:service "UserInputService".InputEnded:connect(
    function(i)
        if i.KeyCode == Enum.KeyCode.F3 then
            ass = not ass
            bitch.Network.IncomingReplicationLag = ass and 10 or 0
        end
    end
)
 end) 
local Button1 = Section2:CreateButton("ServerHop", function()
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

-- If you'd like to use a script before server hopping (Like a Automatic Chest collector you can put the Teleport() after it collected everything.
Teleport() 
end)
local Button1 = Section2:CreateButton("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer) end)





local Toggle3 = Section3:CreateToggle("UI Toggle", nil, function(State)
	Window:Toggle(State)
end)
Toggle3:CreateKeybind(tostring(Config.Keybind):gsub("Enum.KeyCode.", ""), function(Key)
	Config.Keybind = Enum.KeyCode[Key]
end)
Toggle3:SetState(true)
Section3:CreateLabel("Credits DekuDimz#7960")
Section3:CreateLabel("Credits AlexR32#3232 Ui")
Section3:CreateLabel("Credits The3Bakers")
local Colorpicker3 = Section3:CreateColorpicker("UI Color", function(Color)
	Window:ChangeColor(Color)
end)
Colorpicker3:UpdateColor(Config.Color)

-- credits to jan for patterns
local Dropdown3 = Section4:CreateDropdown("Image", {"Default","Hearts","Abstract","Hexagon","Circles","Lace With Flowers","Floral"}, function(Name)
	if Name == "Default" then
		Window:SetBackground("2151741365")
	elseif Name == "Hearts" then
		Window:SetBackground("6073763717")
	elseif Name == "Abstract" then
		Window:SetBackground("6073743871")
	elseif Name == "Hexagon" then
		Window:SetBackground("6073628839")
	elseif Name == "Circles" then
		Window:SetBackground("6071579801")
	elseif Name == "Lace With Flowers" then
		Window:SetBackground("6071575925")
	elseif Name == "Floral" then
		Window:SetBackground("5553946656")
	end
end)
Dropdown3:SetOption("Default")

local Colorpicker4 = Section4:CreateColorpicker("Color", function(Color)
	Window:SetBackgroundColor(Color)
end)
Colorpicker4:UpdateColor(Color3.new(1,1,1))

local Slider3 = Section4:CreateSlider("Transparency",0,1,nil,false, function(Value)
	Window:SetBackgroundTransparency(Value)
end)
Slider3:SetValue(0)

local Slider4 = Section4:CreateSlider("Tile Scale",0,1,nil,false, function(Value)
	Window:SetTileScale(Value)
end)
Slider4:SetValue(0.5)


spawn(function()
while wait() do
Save()
end end)
